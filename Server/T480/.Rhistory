rownames(aoa_s) <- rownames(aoa_l) <- Lab
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
rownames(aoa_s) <- rownames(aoa_l) <- Lab
kableExtra::kable(aoa_s, format = "latex") %>% kableExtra::collapse_rows(latex_hline = "none")
aoa_s
kableExtra::kable(aoa_s, format = "latex") %>% kableExtra::collapse_rows(latex_hline = "none")
kableExtra::kable(aoa_s, format = "latex", row.names = Lab) %>% kableExtra::collapse_rows(latex_hline = "none")
kableExtra::kable(aoa_s, format = "latex", row.names = Lab, col.names = NULL) %>% kableExtra::collapse_rows(latex_hline = "none")
kableExtra::kable(aoa_s, format = "latex", col.names = NULL) %>% kableExtra::collapse_rows(latex_hline = "none")
?kableExtra::kable
kableExtra::kable(aoa_s, format = "latex", col.names = NA) %>% kableExtra::collapse_rows(latex_hline = "none")
kableExtra::kable(aoa_s, format = "latex") %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 1)
kableExtra::kable(aoa_s, format = "latex") %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 2)
kableExtra::kable(aoa_s, format = "latex") %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
kableExtra::kable(aoa_l, format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none")
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, row.names = Lab) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, row.names = Lab) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
aoa_s
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
aoa_s <- round(aoa_s, digits = 2)
aoa_l <- round(aoa_l, digits = 2)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
kableExtra::kable(aoa_l %>% round(digits = 3), format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none")
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
rownames(aoa_s) <- rownames(aoa_l) <- Lab
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12) %>% kableExtra::collapse_rows(latex_hline = "none", headers_to_remove = 0)
aoa_s
aoa_s %>% round(digits = 3)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, latex_hline = "none")
# Load functions ----------------------------------------------------------
rm(list = ls())
Functions <- devtools::as.package("../Functions")
devtools::load_all("../Functions")
IDM <- c("SR", "CV", "dCov", "IV", "IV_W", "IV_P")
Lab <- c("SR", "CV", "dCov", "IV", "IV-W", "IV-P")
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
rownames(aoa_s) <- rownames(aoa_l) <- Lab
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T)
rownames(aoa_s) <- rownames(aoa_l) <- Lab
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T)
aoa_s
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
rownames(aoa_s) <- rownames(aoa_l) <- Lab
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T)
# Load functions ----------------------------------------------------------
rm(list = ls())
Functions <- devtools::as.package("../Functions")
devtools::load_all("../Functions")
IDM <- c("SR", "CV", "dCov", "IV", "IV_W", "IV_P")
Lab <- c("SR", "CV", "dCov", "IV", "IV-W", "IV-P")
# Graphics ----------------------------------------------------------------
Tobs <- 240
Dist <- c("L1", "L2a", "L2b", "L3a", "L3b")
TT <- c(120, 240, 480)
i = 1
aoa_s <- matrix(NA, nrow = length(IDM), ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM), ncol = 12)
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[,c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[,c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
rownames(aoa_s) <- rownames(aoa_l) <- Lab
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T) %>% kableExtra::pack_rows("$\mathcal{L}_I$", 1,6)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T) %>% kableExtra::pack_rows("$ \mathcal{L}_I$", 1, 6)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T) %>% kableExtra::pack_rows("$mathcal{L}_I$", 1, 6)
x <- knitr::kable(head(mtcars), "html")
# Put Row 2 to Row 5 into a Group and label it as "Group A" pack_rows(x, "Group A", 2, 5)
pack_rows(x, "Group A", 2, 5)
kableExtra::pack_rows(x, "Group A", 2, 5)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T)
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = F)
T
kableExtra::kable(aoa_s %>% round(digits = 3), format = "latex", col.names = 1:12, booktabs = T)
?kableExtra::kable
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3)
aoa_s <- matrix(NA, nrow = length(IDM)*5, ncol = 12)
aoa_l <- matrix(NA, nrow = length(IDM)*5, ncol = 12)
for (i in 1:5) {
for (t in 1:3) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
tab_temp <- tabulate.simu.aoa(aoa_temp, Label = Lab)
aoa_s[c((6*(i-1)+1):(i*6)),c((4*(t-1)+1):(t*4))] <- tab_temp$short
aoa_l[c((6*(i-1)+1):(i*6)),c((4*(t-1)+1):(t*4))] <- tab_temp$long
}
}
aoa_s
rownames(aoa_s) <- rownames(aoa_l) <- rep(Lab, 5)
aoa_s
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec(hline_after = F)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec( 1:%, hline_after = F)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec( 1:10, hline_after = F)
c(1:6)*5
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec(c(1:6)*5, hline_after = F)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec(c(1:6)*6, hline_after = F)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec(c(1:5)*6, hline_after = F)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3) %>% kableExtra::row_spec(c(1:5)*5, hline_after = F)
?kableExtra::kable
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*5, hline_after = F)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*5, hline_after = F)T
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*5, hline_after = T)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:6)*5, hline_after = T)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*6, hline_after = T)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
kableExtra::kable(aoa_l, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
kableExtra::kable(aoa_s, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
kableExtra::kable(aoa_l, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
SR <- readRDS("~/Research/MasterThesis/Revision/Code/Server/T120/L2a/return/SR.rds")
dCov <- readRDS("~/Research/MasterThesis/Revision/Code/Server/T120/L2a/return/dCov.rds")
CV <- readRDS("~/Research/MasterThesis/Revision/Code/Server/T120/L2a/return/CV.rds")
IV <- readRDS("~/Research/MasterThesis/Revision/Code/Server/T120/L2a/return/IV.rds")
IV_W <- readRDS("~/Research/MasterThesis/Revision/Code/Server/T120/L2a/return/IV_W.rds")
IV_P <- readRDS("~/Research/MasterThesis/Revision/Code/Server/T120/L2a/return/IV_P.rds")
tabulate.simu.ump(list(SR, CV, dCov, IV, IV_W, IV_P),
Label = c("SR", "CV", "dCov", "IV", "IV-W", "IV-P"))
## UMP table
ump_tab <- matrix(NA, nrow = length(IDM), ncol = 15)
test <- tabulate.simu.ump(list(SR, CV, dCov, IV, IV_W, IV_P),
Label = c("SR", "CV", "dCov", "IV", "IV-W", "IV-P"))
test$ump %>% size
test$ump %>% dim
i=1
t=1
ump_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
ump_temp[[j]] <- readRDS(Path_In)
}
tab_temp <- tabulate.simu.ump(ump_temp, Lab)
tab_temp
tab_temp <- tabulate.simu.ump(ump_temp, Lab)$ump
tab_temp
## UMP table
ump_tab <- matrix(NA, nrow = length(IDM), ncol = 15)
for (i in 1:5) {
for (t in 1:3) {
ump_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
ump_temp[[j]] <- readRDS(Path_In)
}
ump_tab[, ((i-1)*3+t)] <- tabulate.simu.ump(ump_temp, Lab)$ump
}
}
ump_tab
kableExtra::kable(ump_tab, format = "latex", col.names = 1:15, booktabs = T, digits = 3, linesep = "") #%>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
rownames(ump_tab) <- Lab
kableExtra::kable(ump_tab, format = "latex", col.names = 1:15, booktabs = T, digits = 3, linesep = "") #%>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
## UMP table
ump_tab <- matrix(NA, nrow = length(IDM), ncol = 15)
for (i in 1:5) {
for (t in 1:3) {
ump_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
ump_temp[[j]] <- readRDS(Path_In)
}
ump_tab[, ((i-1)*3+t)] <- tabulate.simu.ump(ump_temp, Lab)$ump
}
rm(ump_temp)
}
rownames(ump_tab) <- Lab
kableExtra::kable(ump_tab, format = "latex", col.names = 1:15, booktabs = T, digits = 3, linesep = "")
test$rmse
i=1
t = 1
rmse_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
rmse_temp[[j]] <- readRDS(Path_In)
}
tabulate.simu.ump(rmse_temp, Lab)$rmse
length(IDM)
c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))
c((length(IDM)*(i-1)+1):(i*length(IDM)))
c((4*(t-1)+1):(t*4))
rmse_tab[c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))]
## RMSE table
rmse_tab <- matrix(NA, nrow = length(IDM)*5, ncol = 12)
rmse_tab[c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))] <- tabulate.simu.ump(rmse_temp, Lab)$rmse
rmse_tab
t=2
rmse_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
rmse_temp[[j]] <- readRDS(Path_In)
}
rmse_tab[c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))] <- tabulate.simu.ump(rmse_temp, Lab)$rmse
rmse_tab
t=3
rmse_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
rmse_temp[[j]] <- readRDS(Path_In)
}
rmse_tab[c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))] <- tabulate.simu.ump(rmse_temp, Lab)$rmse
rmse_tab
i=2
for (t in 1:3) {
rmse_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
rmse_temp[[j]] <- readRDS(Path_In)
}
rmse_tab[c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))] <- tabulate.simu.ump(rmse_temp, Lab)$rmse
}
rmse_tab
## RMSE table
rmse_tab <- matrix(NA, nrow = length(IDM)*5, ncol = 12)
for (i in 1:5) {
for (t in 1:3) {
rmse_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", TT[t], "/", Dist[i], "/return/", IDM[j], ".rds")
rmse_temp[[j]] <- readRDS(Path_In)
}
rmse_tab[c((length(IDM)*(i-1)+1):(i*length(IDM))),c((4*(t-1)+1):(t*4))] <- tabulate.simu.ump(rmse_temp, Lab)$rmse
}
rm(rmse_temp)
}
rownames(rmse_tab) <- rep(Lab, 5)
kableExtra::kable(rmse_tab, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
rmse_tab
kableExtra::kable(rmse_tab, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") #%>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
kableExtra::kable(rmse_tab, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
kableExtra::kable(rmse_tab, format = "latex", col.names = 1:12, booktabs = T, digits = 3, linesep = "") %>% kableExtra::row_spec(c(1:5)*length(IDM), hline_after = T)
rm(list = ls())
Functions <- devtools::as.package("../Functions")
devtools::load_all("../Functions")
IDM   <- c("SR", "CV", "dCov", "CvM", "IV", "IV_W", "IV_P")
Lab   <- c("SR", "CV", "dCov", "CvM", "IV", "IV-W", "IV-P")
Dist  <- c("L1", "L2a", "L2b", "L3a", "L3b")
# Graphics ----------------------------------------------------------------
Tobs <- 240
for (i in 1:5) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", Tobs, "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
plot_temp <- plot.simu.multi(aoa_temp, Label = Lab, shape_manual = c(15:17, 5, 1:3))
Path_Out <- paste0("../Plots/")
ggsave(paste0(Path_Out, "T", Tobs, "_", Dist[i], ".pdf"), plot = plot_temp, width = 12, height = 8)
rm(temp, aoa_temp, plot_temp)
}
# Load functions ----------------------------------------------------------
rm(list = ls())
Functions <- devtools::as.package("../Functions")
devtools::load_all("../Functions")
IDM   <- c("SR", "CV", "dCov", "CvM", "IV", "IV_W", "IV_P")
Lab   <- c("SR", "CV", "dCov", "CvM", "IV", "IV-W", "IV-P")
Dist  <- c("L1", "L2a", "L2b", "L3a", "L3b")
# Graphics ----------------------------------------------------------------
Tobs <- 240
for (i in 1:5) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", Tobs, "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
plot_temp <- plot.simu.multi(aoa_temp, Label = Lab, shape_manual = c(15:17, 5, 1:3))
Path_Out <- paste0("../Plots/")
ggsave(paste0(Path_Out, "T", Tobs, "_", Dist[i], ".pdf"), plot = plot_temp, width = 12, height = 8)
rm(temp, aoa_temp, plot_temp)
}
rm(list = ls())
Functions <- devtools::as.package("../Functions")
devtools::load_all("../Functions")
IDM   <- c("SR", "CV", "dCov", "CvM", "IV", "IV_W", "IV_P")
Lab   <- c("SR", "CV", "dCov", "CvM", "IV", "IV-W", "IV-P")
Dist  <- c("L1", "L2a", "L2b", "L3a", "L3b")
# Graphics ----------------------------------------------------------------
Tobs <- 240
for (i in 1:5) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", Tobs, "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
plot_temp <- plot.simu.multi(aoa_temp, Label = Lab, shape_manual = c(15:17, 5, 1:3))
Path_Out <- paste0("../Plots/")
ggsave(paste0(Path_Out, "T", Tobs, "_", Dist[i], ".pdf"), plot = plot_temp, width = 12, height = 8)
rm(temp, aoa_temp, plot_temp)
}
rm(list = ls())
Functions <- devtools::as.package("../Functions")
devtools::load_all("../Functions")
IDM   <- c("SR", "CV", "dCov", "CvM", "IV", "IV_W", "IV_P")
Lab   <- c("SR", "CV", "dCov", "CvM", "IV", "IV-W", "IV-P")
Dist  <- c("L1", "L2a", "L2b", "L3a", "L3b")
# Graphics ----------------------------------------------------------------
Tobs <- 480
for (i in 1:5) {
aoa_temp <- list()
for (j in 1:length(IDM)) {
Path_In <- paste0("../Server/", "T", Tobs, "/", Dist[i], "/return/", IDM[j], ".rds")
temp <- readRDS(Path_In)
if (IDM[j] == "SR"){
aoa_temp[[j]] <- temp$M
} else {
aoa_temp[[j]] <- temp$aoa
}
}
plot_temp <- plot.simu.multi(aoa_temp, Label = Lab, shape_manual = c(15:17, 5, 1:3))
Path_Out <- paste0("../Plots/")
ggsave(paste0(Path_Out, "T", Tobs, "_", Dist[i], ".pdf"), plot = plot_temp, width = 12, height = 8)
rm(temp, aoa_temp, plot_temp)
}
setwd("~/Research/MasterThesis/Revision/Code/Server/T480")
rm(list = ls())
Tob <- 480
AOA <- readRDS("../AOA.rds")
library(parallel)
# Load functions ----------------------------------------------------------
Functions <- devtools::as.package("../../Functions")
devtools::load_all("../../Functions")
# Distributional settings -------------------------------------------------
Dist      <- c("mixed_b", "mixed_a")
Dist_lab  <- c("L3a", "L3b")
# Load configurations -----------------------------------------------------
for (l in 1:2) {
path.temp   <- paste0(Dist_lab[l], "/Config.rds")
Config.temp <- readRDS(path.temp)
# Data generating ---------------------------------------------------------
set.seed(1234)
Y <- simu.datas(Config = Config.temp, DGP = 1)
# Identification and evaluation -------------------------------------------
## Sign restrictions
#Signmat   <- matrix(c(1,1,1,-1,1,1,NA,-1,1), nrow = 3, ncol = 3) # agnostic sign restrictions
#TrueSign  <- matrix(c(1,1,1,-1,1,1,-1,-1,1), nrow = 3, ncol = 3) # true signs
#set.seed(1234)
#SR        <- simulate.sign(Data = Y, AOA = AOA, Iter = 1000, Itermax = Inf, Signmat = Signmat, TrueSign = TrueSign, Bmat = Config.temp$Par$B, RHorizont = 0, MT = T, Ci = 0.68)
#saveRDS(SR, paste0(Dist_lab[l], "/return/SR.rds"))
## Identification by change in volatility
#set.seed(1234)
#CV        <- simulate.cv(Data = Y, AOA = AOA, Break = Config.temp$Break, Bmat = Config.temp$Par$B, Guess = TRUE)
#saveRDS(CV, paste0(Dist_lab[l], "/return/CV.rds"))
## Identification by minimizing distance covariance
#set.seed(1234)
#dCov      <- simulate.dcov(Data = Y, AOA = AOA, Bmat = Config.temp$Par$B)
#saveRDS(dCov, paste0(Dist_lab[l], "/return/dCov.rds"))
## Identification by valid instruments
#set.seed(1234)
#IV        <- simulate.iv(Data = Y, AOA = AOA, Bmat = Config.temp$Par$B)
#saveRDS(IV, paste0(Dist_lab[l], "/return/IV.rds"))
## Identification by weak instruments
#set.seed(1234)
#IV.W      <- simulate.iv(Data = Y, AOA = AOA, Weak = T, Bmat = Config.temp$Par$B)
#saveRDS(IV.W, paste0(Dist_lab[l], "/return/IV_W.rds"))
## Identification by invalid instruments
#set.seed(1234)
#IV.P      <- simulate.iv(Data = Y, AOA = AOA, Combi = T, Bmat = Config.temp$Par$B)
#saveRDS(IV.P, paste0(Dist_lab[l], "/return/IV_P.rds"))
## Identification by minimizing Cramer-von Mises distance
RNGkind("L'Ecuyer-CMRG")
set.seed(1234)
CvM       <- simulate.cvm.mc(Data = Y, AOA = AOA, mc.cores = 80, Iter = 1500, Steptol = 200, Stage2 = 250, Bmat = Config.temp$Par$B)
saveRDS(CvM, paste0(Dist_lab[l], "/return/CvM.rds"))
}
path.temp
paste0(Dist_lab[l], "/return/CvM.rds")
