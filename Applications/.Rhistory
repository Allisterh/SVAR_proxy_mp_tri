colnames(MP_shocks_plotSW_Fa_df)[-1] <- c("VAR", "FAVAR")
demand_cv   <- solve(CV$B)        %*% t(resid(var4)) %>% t() %>% as.data.frame() %>% select(1)
demand_cv <- cbind(time(var4$y)[-c(1:4)], demand_cv); colnames(demand_cv) <- c("time", "demand_cv")
supply_cv     <- solve(CV$B)          %*% t(resid(var4)) %>% t() %>% as.data.frame() %>% select(2)
supply_cv <- cbind(time(var4$y)[-c(1:4)], supply_cv); colnames(supply_cv) <- c("time", "supply_cv")
Ample <- function(NonMP, iv){
K <- dim(NonMP)[2]
temp <- left_join(NonMP, iv, by = "time") %>% tidyr::drop_na() %>% select(-1)
temp2 <- lm(temp[,K] ~ temp[,-K] %>% as.matrix()-1) %>% summary()
return(c(cor(temp)[K, -K], temp2$r.squared,temp2$fstatistic[1]))
}
Conf_bound <- function(NonMP, iv){
K <- dim(NonMP)[2]
temp <- left_join(NonMP, iv, by = "time") %>% tidyr::drop_na() %>% select(-1)
return(2/sqrt(nrow(temp)))
}
non_mp_cv <- left_join(demand_cv, supply_cv, by = "time")
ample_tab_cv <- rbind(Ample(non_mp_cv, IV.SW$eps.ts),
Ample(non_mp_cv, IV.RR$eps.ts),
Ample(non_mp_cv, IV.SZ$eps.ts))
Conf_tab <- rbind(Conf_bound(non_mp_cv, IV.SW$eps.ts),
Conf_bound(non_mp_cv, IV.RR$eps.ts),
Conf_bound(non_mp_cv, IV.SZ$eps.ts))
row.names(ample_tab_cv) <- c("SW", "RR", "SZ")
colnames(ample_tab_cv) <- NULL
ample_tab <- cbind(Conf_tab, ample_tab_cv)
kableExtra::kable(t(ample_tab), format = "latex", booktabs = T, digits = 3, linesep = "")
#non_mp_cv_s <- left_join(non_mp_cv, SW.ts, by = "time") %>% left_join(RR.ts, by = "time") %>% left_join(SZ.ts, by = "time")  %>% tidyr::drop_na() %>% select(-1)
non_mp_cv_s <- left_join(non_mp_cv, IV.SW$eps.ts, by = "time") %>% left_join(IV.RR$eps.ts, by = "time") %>% left_join(IV.SZ$eps.ts, by = "time")  %>% tidyr::drop_na() %>% select(-1)
non_mp_cv_s_tab <- data.frame(cor(non_mp_cv_s[,3], non_mp_cv_s$demand_cv),
cor(non_mp_cv_s[,3], non_mp_cv_s$supply_cv),
summary(lm(non_mp_cv_s[,3] ~ non_mp_cv_s[,1:2] %>% as.matrix()-1))$r.squared,
summary(lm(non_mp_cv_s[,3] ~ non_mp_cv_s[,1:2] %>% as.matrix()-1))$fstatistic[1])
colnames(non_mp_cv_s_tab) <- 1:4
for (i in 4:dim(non_mp_cv_s)[2]) {
temp <- data.frame(cor(non_mp_cv_s[,i], non_mp_cv_s$demand_cv),
cor(non_mp_cv_s[,i], non_mp_cv_s$supply_cv),
summary(lm(non_mp_cv_s[,i] ~ non_mp_cv_s[,1:2] %>% as.matrix()-1))$r.squared,
summary(lm(non_mp_cv_s[,i] ~ non_mp_cv_s[,1:2] %>% as.matrix()-1))$fstatistic[1])
colnames(temp) <- 1:4
non_mp_cv_s_tab <- rbind(non_mp_cv_s_tab, temp)
}
rownames(non_mp_cv_s_tab) <- NULL
kableExtra::kable(t(non_mp_cv_s_tab), format = "latex", booktabs = T, digits = 3, linesep = "")
# exogeneity: purge -------------------------------------------------------
demand_cv   <- solve(CV$B)        %*% t(resid(var4)) %>% t() %>% as.data.frame() %>% select(1)
demand_cv <- cbind(time(var4$y)[-c(1:4)], demand_cv); colnames(demand_cv) <- c("time", "demand_cv")
supply_cv     <- solve(CV$B)          %*% t(resid(var4)) %>% t() %>% as.data.frame() %>% select(2)
supply_cv <- cbind(time(var4$y)[-c(1:4)], supply_cv); colnames(supply_cv) <- c("time", "supply_cv")
non_mp_cv <- left_join(demand_cv, supply_cv, by = "time")
# RR_pro
temp <- left_join(non_mp_cv, RR.ts, by = "time") %>% tidyr::drop_na()
lm1 <-  lm(temp$RR ~ temp[,2:3] %>% as.matrix()-1)
RR_pro <- data.frame("time" = temp$time, "RR_pro" =  lm1 %>% resid())
# RR_pro
temp <- left_join(non_mp_cv, RR.ts, by = "time") %>% tidyr::drop_na()
lm1 <-  lm(temp$RR ~ temp[,2:3] %>% as.matrix()-1)
RR_pro <- data.frame("time" = temp$time, "RR_pro" =  lm1 %>% resid())
RR_pro <- ts(RR_pro$RR_pro, frequency = 4, start = c(floor(RR_pro$time[1]), (RR_pro$time[1] %% 1) / 0.25 + 1 ))
IV.RR_pro <- get.id.iv(var4, instruments = RR_pro, Synchro = T)
IV.RR_pro$B
IV.RR_pro$F_test
#SZ_pro
temp <- left_join(non_mp_cv, SZ.ts, by = "time") %>% tidyr::drop_na()
lm2 <- lm(temp$SZ ~ temp[,2:3] %>% as.matrix()-1)
SZ_pro <- data.frame("time" = temp$time, "SZ_pro" =  lm2 %>% resid())
SZ_pro <- ts(SZ_pro$SZ_pro, frequency = 4, start = c(floor(SZ_pro$time[1]), (SZ_pro$time[1] %% 1) / 0.25 + 1 ))
IV.SZ_pro <- get.id.iv(var4, instruments = SZ_pro, Synchro = T)
IV.SZ_pro$B
IV.SZ_pro$F_test
# Cormat
new_cormat <- mp_all %>% left_join(IV.RR_pro$eps.ts, by = "time") %>% left_join(IV.SZ_pro$eps.ts, by = "time")
colnames(new_cormat)[c(8,9)] <- c("RR_pro", "SZ_pro")
new_cormat %>% select(-1) %>% cor %>% round(3) %>% kableExtra::kable(format = "latex", booktabs = T, digits = 3, linesep = "")
# Event analysis ----------------------------------------------------------
# April 1974, October 1979, December 1988 and February 1994 - were contractionary
# December 1990, October 1998, April 2001, and November 2002  -were expansionary
mp_pros <- IV.RR_pro$eps.ts %>% left_join(IV.SZ_pro$eps.ts, by = "time")
colnames(mp_pros)[-1] <- c("RR", "SZ")
mp_pro_tab <- mp_pros %>% filter(time == 1974.25 | time == 1979.75 | time == 1988.75 | time == 1994 | time == 1990.75 | time == 1998.75 | time == 2001.25| time == 2002.75)
mp_pro_tab[c(4,5),] <- mp_pro_tab[c(5,4),]
mp_pro_tab %>% t() %>% kableExtra::kable(format = "latex", booktabs = T, digits = 3, linesep = "")
mps_RR_pro <- mp_all_pro_stand %>% select(time, old=RR, new=RR_pro) %>% melt(id.var = "time")
mps_SZ_pro <- mp_all_pro_stand %>% select(time, old=SZ, new=SZ_pro) %>% melt(id.var = "time")
# shock plot
mp_all_pro <- mp_all %>% left_join(IV.RR_pro$eps.ts, by = "time") %>% left_join(IV.SZ_pro$eps.ts, by = "time")
colnames(mp_all_pro)[c(8,9)] <- c("RR_pro", "SZ_pro")
# including cv demand and supply shocks
mp_all_pro %<>% left_join(non_mp_cv, by = "time")
mp_sds_pro <- mp_all_pro %>% select(-1) %>% apply( 2, sd)
mp_all_pro_stand <- mp_all_pro
for (j in 1:dim(mp_all_pro)[1]) {
for (i in 2:ncol(mp_all_pro)) {
mp_all_pro_stand[j,i] <- mp_all_pro[j,i] / mp_sds_pro[i-1]
}
}
mp_all_pro_stand %>% select(-1) %>% apply( 2, sd)
# Event analysis ----------------------------------------------------------
# April 1974, October 1979, December 1988 and February 1994 - were contractionary
# December 1990, October 1998, April 2001, and November 2002  -were expansionary
mp_pros <- IV.RR_pro$eps.ts %>% left_join(IV.SZ_pro$eps.ts, by = "time")
colnames(mp_pros)[-1] <- c("RR", "SZ")
mp_pro_tab <- mp_pros %>% filter(time == 1974.25 | time == 1979.75 | time == 1988.75 | time == 1994 | time == 1990.75 | time == 1998.75 | time == 2001.25| time == 2002.75)
mp_pro_tab[c(4,5),] <- mp_pro_tab[c(5,4),]
mp_pro_tab %>% t() %>% kableExtra::kable(format = "latex", booktabs = T, digits = 3, linesep = "")
mps_RR_pro <- mp_all_pro_stand %>% select(time, old=RR, new=RR_pro) %>% melt(id.var = "time")
mps_SZ_pro <- mp_all_pro_stand %>% select(time, old=SZ, new=SZ_pro) %>% melt(id.var = "time")
mps_plot.SW <- ggplot(mp_all_pro_stand, aes(x = time, y = SW)) + geom_line() + ylim(-4.5,  4.5)+
scale_x_continuous(breaks = seq(mp_all_pro_stand$time[1] %>% ceiling(),mp_all_pro_stand$time[nrow(mp_all)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
annotate("rect", xmin = 1979.5, xmax = 1983, ymin = -Inf, ymax = Inf, alpha = 0.3)
mps_plot.RR <- ggplot(mps_RR_pro, aes(x = time, y = value, group = variable)) + ylim(-4.5,  4.5)+
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("longdash", "solid")) +
scale_x_continuous(breaks = seq(mp_all_pro_stand$time[1] %>% ceiling(),mp_all_pro_stand$time[nrow(mp_all)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
theme(legend.position = "none") + annotate("rect", xmin = 1979.5, xmax = 1983, ymin = -Inf, ymax = Inf, alpha = 0.3)
mps_plot.SZ <- ggplot(mps_SZ_pro, aes(x = time, y = value, group = variable)) + ylim(-4.5,  4.5)+
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("longdash", "solid")) +
scale_x_continuous(breaks = seq(mp_all_pro_stand$time[1] %>% ceiling(),mp_all_pro_stand$time[nrow(mp_all)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
theme(legend.position = "none") + annotate("rect", xmin = 1979.5, xmax = 1983, ymin = -Inf, ymax = Inf, alpha = 0.3)
mps_plot_pros <- grid.arrange(mps_plot.SW, mps_plot.RR, mps_plot.SZ)
non_mp_cv_stand <- data.frame("time" =  non_mp_cv$time, scale(non_mp_cv[,-1]))
all_shocks.CV <- mp_all_pro_stand %>% left_join(non_mp_cv_stand, by = "time")
all_shocks_plot.CV <- ggplot(all_shocks.CV %>% select(time, AD = demand_cv, AS = supply_cv) %>% melt(id.var = "time"), aes(x = time, y = value, group = variable)) + ylim(-4.5,  4.5)+
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("longdash", "dotted")) +
scale_x_continuous(breaks = seq(all_shocks.CV$time[1] %>% ceiling(),mp_all_pro_stand$time[nrow(mp_all)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
theme(legend.position = "none") + annotate("rect", xmin = 1979.5, xmax = 1983, ymin = -Inf, ymax = Inf, alpha = 0.3)
all_plot_pros <- grid.arrange(mps_plot.SW, mps_plot.RR, mps_plot.SZ, all_shocks_plot.CV, ncol = 1)
mps_plot_pros <- grid.arrange(mps_plot.SW, mps_plot.RR, mps_plot.SZ)
# exogen
ample_tab_pro <- rbind(Ample(non_mp_cv, IV.RR_pro$eps.ts),
Ample(non_mp_cv, IV.SZ_pro$eps.ts))
# Volcker -----------------------------------------------------------------
Start = 1979.75
End1 = 1982.5
End2 = 1983.5
(T0A = Start - (End1 - Start) - 0.25)
(T0B = Start - (End2 - Start) - 0.25)
(T0C = T0A - (End1 - Start) - 0.25)
(TTA = End1 + (End1 - Start) + 0.25)
(TTB = End2 + (End2 - Start) + 0.25)
Volcker.fct <- function(x, series = 2, Par = NULL, Epsname = c("d", "s", "mp"), Start, End){
if (!is.null(Par)){
erg <- quasi.hd(x, series, Partial = Par, Epsname = Epsname, Start = Start, End = End, Freq = 4)
} else {
erg <- c(quasi.hd(x, series, Partial = 1, Epsname = Epsname, Start = Start, End = End, Freq = 4),
quasi.hd(x, series, Partial = 2, Epsname = Epsname, Start = Start, End = End, Freq = 4),
quasi.hd(x, series, Partial = 3, Epsname = Epsname, Start = Start, End = End, Freq = 4)) %>% t %>% t
}
erg
}
# Pi ----------------------------------------------------------------------
# CV
pi_RefA_CV <- Volcker.fct(CV, series = 2, Start = Start, End = End1) * 0.25
pi_RefB_CV <- Volcker.fct(CV, series = 2, Start = Start, End = End2) * 0.25
pi_anteA_CV <- Volcker.fct(CV, series = 2, Start = T0A, End = Start- 0.25) * 0.25
pi_anteB_CV <- Volcker.fct(CV, series = 2, Start = T0B, End = Start- 0.25) * 0.25
pi_anteC_CV <- Volcker.fct(CV, series = 2, Start = T0C, End = T0A- 0.25) * 0.25
pi_postA_CV <- Volcker.fct(CV, series = 2, Start = End1+ 0.25, End = TTA) * 0.25
pi_postB_CV <- Volcker.fct(CV, series = 2, Start = End2+ 0.25, End = TTB) * 0.25
# SW
pi_RefA_SW <- Volcker.fct(IV.SW, Par = 3, Start = Start, End = End1) * 0.25
pi_RefB_SW <- Volcker.fct(IV.SW, Par = 3, Start = Start, End = End2) * 0.25
pi_anteA_SW <- Volcker.fct(IV.SW, Par = 3, Start = T0A, End = Start- 0.25) * 0.25
pi_anteB_SW <- Volcker.fct(IV.SW, Par = 3, Start = T0B, End = Start- 0.25) * 0.25
pi_anteC_SW <- Volcker.fct(IV.SW, Par = 3, Start = T0C, End = T0A- 0.25) * 0.25
pi_postA_SW <- Volcker.fct(IV.SW, Par = 3, Start = End1+ 0.25, End = TTA) * 0.25
pi_postB_SW <- Volcker.fct(IV.SW, Par = 3, Start = End2+ 0.25, End = TTB) * 0.25
# output ------------------------------------------------------------------
# CV
x_RefA_CV <- Volcker.fct(CV, series = 1, Start = Start, End = End1)
x_RefB_CV <- Volcker.fct(CV, series = 1, Start = Start, End = End2)
x_anteA_CV <- Volcker.fct(CV, series = 1, Start = T0A, End = Start- 0.25)
x_anteB_CV <- Volcker.fct(CV, series = 1, Start = T0B, End = Start- 0.25)
x_anteC_CV <- Volcker.fct(CV, series = 1, Start = T0C, End = T0A- 0.25)
x_postA_CV <- Volcker.fct(CV, series = 1, Start = End1+ 0.25, End = TTA)
x_postB_CV <- Volcker.fct(CV, series = 1, Start = End2+ 0.25, End = TTB)
# SW
x_RefA_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = Start, End = End1)
x_RefB_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = Start, End = End2)
x_anteA_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = T0A, End = Start- 0.25)
x_anteB_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = T0B, End = Start- 0.25)
x_anteC_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = T0C, End = T0A- 0.25)
x_postA_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = End1+ 0.25, End = TTA)
x_postB_SW <- Volcker.fct(IV.SW, series = 1, Par = 3, Start = End2+ 0.25, End = TTB)
Volcker_shock <- function(x, Punkt = 1979.75, End){
series = 2
Partial = 3
Epsname = c("d", "s", "mp")
Start = Start
Freq = 4
if(class(x) == "my.id"){
# Function to calculate matrix potence
"%^%" <- function(A, n){
if(n == 1){
A
}else{
A %*% (A %^% (n-1))
}
}
# function to calculate impulse response
IrF <- function(A_hat, B_hat, horizon){
k <- nrow(A_hat)
p <- ncol(A_hat)/k
if(p == 1){
irfa <- array(0, c(k, k, horizon))
irfa[,,1] <- B_hat
for(i in 1:horizon){
irfa[,,i] <- (A_hat%^%i)%*%B_hat
}
return(irfa)
}else{
irfa <- array(0, c(k, k, horizon))
irfa[,,1] <- B_hat
Mm <- matrix(0, nrow = k*p, ncol = k*p)
Mm[1:k, 1:(k*p)] <- A_hat
Mm[(k+1):(k*p), 1 : ((p-1)*k)] <- diag(k*(p-1))
Mm1 <- diag(k*p)
for(i in 1:(horizon-1)){
Mm1 <- Mm1%*%Mm
irfa[,,(i+1)] <- Mm1[1:k, 1:k]%*%B_hat
}
return(irfa)
}
}
## Step 1: Calculate MA coefficients
k <- length(x$Varname)
A_hat <- t(x$Beta)[,  1 : (x$p * k)]
if (x$method[1] == "sr"){
B_hat <- x$IRF.MT[,,1] #median target
horizon <- (End - Punkt)*Freq + 1
IR <- IrF(A_hat, B_hat, horizon)
if(is.null(Epsname)){Epsname <- x$Varname}
impulse <- matrix(0, ncol = dim(IR)[2]^2 + 1, nrow = dim(IR)[3])
colnames(impulse) <- rep("V1", ncol(impulse))
cc <- 1
impulse[,1] <- seq(1, dim(IR)[3])
for(i in 1:dim(IR)[2]){
for(j in 1:dim(IR)[2]){
cc <- cc + 1
impulse[,cc] <- IR[i,j,]
colnames(impulse)[cc] <- paste("epsilon[",Epsname[j],"]", "%->%", x$Varname[i])
}
}
# Step 2: Calculate structural errors
p <- x$p
s.errors <- x$epsilon.M[Partial,]
s.time <- time(x$dat)[-(1:p)]
s.errors <- data.frame("time" = s.time, "eps" = s.errors) %>% filter(time == Punkt) %>% select(eps)
s.impulse <- impulse[,(k*(series-1)+Partial +1)]
erg <- s.errors$eps*sum(s.impulse)
} else if (x$method[1] == "iv"){
B_hat <- matrix(x$B, k, k)
horizon <- (End - Punkt)*Freq + 1
IR <- IrF(A_hat, B_hat, horizon)
if(is.null(Epsname)){Epsname <- x$Varname}
impulse <- matrix(0, ncol = dim(IR)[2]^2 + 1, nrow = dim(IR)[3])
colnames(impulse) <- rep("V1", ncol(impulse))
cc <- 1
impulse[,1] <- seq(1, dim(IR)[3])
for(i in 1:dim(IR)[2]){
for(j in 1:dim(IR)[2]){
cc <- cc + 1
impulse[,cc] <- IR[i,j,]
colnames(impulse)[cc] <- paste("epsilon[",Epsname[j],"]", "%->%", x$Varname[i])
}
}
# Step 2: Calculate structural errors
s.errors <- x$epsilon
s.time <- x$eps.ts[,1]
s.errors <- data.frame("time" = s.time, "eps" = s.errors) %>% filter(time == Punkt) %>% select(eps)
s.impulse <- impulse[,(k*(series-1)+Partial +1)]
erg <- s.errors$eps*sum(s.impulse)
}
} else if (class(x) == "svars"){
k <- x$K
p <- x$p
horizon <- (End - Punkt)*Freq + 1
impulse <- irf(x, n.ahead = horizon)
s.errors <- solve(x$B) %*% t(resid( x$VAR))
s.errors <- s.errors[Partial,]
s.time <- time(x$y)[-(1:p)]
s.errors <- data.frame("time" = s.time, "eps" = s.errors) %>%  dplyr::filter(time == Punkt) %>% dplyr::select(eps)
s.impulse <- impulse$irf[,(k*(series-1)+Partial +1)]
erg <- s.errors$eps*sum(s.impulse)
}
return(erg)
}
# cumulated ---------------------------------------------------------------
df_pro <- data.frame("period" = c("1979Q4 - 1982Q3", "1979Q4 - 1983Q3"),
"SR" = c(quasi.hd(SR, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End1, Freq = 4),
quasi.hd(SR, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End2, Freq = 4)),
"dCov" = c(quasi.hd(dCov, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End1, Freq = 4),
quasi.hd(dCov, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End2, Freq = 4)),
"CV" = c(quasi.hd(CV, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End1, Freq = 4),
quasi.hd(CV, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End2, Freq = 4)),
"SW" = c(quasi.hd(IV.SW, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End1, Freq = 4),
quasi.hd(IV.SW, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End2, Freq = 4)),
"SZ" = c(quasi.hd(IV.SZ, series = 2, Partial = 3, Epsname = c("d", "s", "mp", "f"), Start = Start, End = End1, Freq = 4),
quasi.hd(IV.SZ, series = 2, Partial = 3, Epsname = c("d", "s", "mp", "f"), Start = Start, End = End2, Freq = 4)),
"RR" = c(quasi.hd(IV.RR, series = 2, Partial = 3, Epsname = c("d", "s", "mp", "f"), Start = Start, End = End1, Freq = 4),
quasi.hd(IV.RR, series = 2, Partial = 3, Epsname = c("d", "s", "mp", "f"), Start = Start, End = End2, Freq = 4)),
"SZ_pro" = c(quasi.hd(IV.SZ_pro, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End1, Freq = 4),
quasi.hd(IV.SZ_pro, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End2, Freq = 4)),
"RR_pro" = c(quasi.hd(IV.RR_pro, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End1, Freq = 4),
quasi.hd(IV.RR_pro, series = 2, Partial = 3, Epsname = c("d", "s", "mp"), Start = Start, End = End2, Freq = 4))) %>% melt(id = c("period"))
df_pro %<>% add_column(lab = "old") %>% mutate(lab = ifelse(variable == "SZ_pro" | variable == "RR_pro", "new", "old"))
df_pro[13:14,]$variable <- "SZ"
df_pro[15:16,]$variable <- "RR"
df_pro %<>% mutate(value = value/4)
df_pro %<>% add_column(type = "agg")
df_1979Q4 <- data.frame("period" = c("1979Q4 - 1982Q3", "1979Q4 - 1983Q3"),
"SR" = c(Volcker_shock(SR, End = End1),
Volcker_shock(SR, End = End2)),
"dCov" = c(Volcker_shock(dCov, End = End1),
Volcker_shock(dCov, End = End2)),
"CV" = c(Volcker_shock(CV, End = End1),
Volcker_shock(CV, End = End2)),
"SW" = c(Volcker_shock(IV.SW, End = End1),
Volcker_shock(IV.SW, End = End2)),
"SZ" = c(Volcker_shock(IV.SZ, End = End1),
Volcker_shock(IV.SZ, End = End2)),
"RR" = c(Volcker_shock(IV.RR, End = End1),
Volcker_shock(IV.RR, End = End2)),
"SZ_pro" = c(Volcker_shock(IV.SZ_pro, End = End1),
Volcker_shock(IV.SZ_pro, End = End2)),
"RR_pro" = c(Volcker_shock(IV.RR_pro, End = End1),
Volcker_shock(IV.RR_pro, End = End2)))  %>% melt(id = c("period")) %>% mutate(value = value * 0.25)
df_1979Q4 %<>% add_column(lab = "old") %>% mutate(lab = ifelse(variable == "SZ_pro" | variable == "RR_pro", "new", "old"))
df_1979Q4[13:14,]$variable <- "SZ"
df_1979Q4[15:16,]$variable <- "RR"
df_1979Q4 %<>% add_column(type = "sig")
df_all <- rbind(df_pro, df_1979Q4)
df_all %>% ggplot(aes(x = variable, y = value)) +
geom_hline(yintercept = 0, color = "red", alpha = 0.8) +
facet_wrap(~period) +
geom_bar(data=subset(df_all, lab == "old" & type == "agg"), aes(fill = variable),
stat="identity", alpha = .5, width=0.5,  color="#999999", linetype = "solid", size=0.8) +
geom_bar(data=subset(df_all, lab == "new" & type == "agg"), aes(fill = variable),
stat="identity", alpha = .5, width=0.5,  color="#999999", linetype = "dashed", size=0.8) +
geom_bar(data=subset(df_all, lab == "old" & type == "sig"), aes(fill = variable),
stat="identity", alpha = 1, width=0.5,  color="#999999", linetype = "solid", size=0.8) +
geom_bar(data=subset(df_all, lab == "new" & type == "sig"), aes(fill = variable),
stat="identity", alpha = 1, width=0.5,  color="#999999", linetype = "dashed", size=0.8) +
xlab("") + ylab(" ") + theme_bw() + theme(legend.position = "none") + scale_fill_ochre(palette="olsen_qual")
# MBB
set.seed(1234)
MP_RR_pro.boot <-  get.MBB.fixed(IV.RR_pro, design = "fixed", Step = 15, nboot = 2000, Ci = 0.68)
set.seed(1234)
MP_SZ_pro.boot <-  get.MBB.fixed(IV.SZ_pro, design = "fixed", Step = 15, nboot = 2000, Ci = 0.68)
# IRFs
MP_RR_pro <-  MP_RR_pro.boot %>% plot.my.irf(Partial = 3, Epsname = c("d", "s", "mp"), Normalize = IV.RR_pro$B[3]/0.25) + xlab("") + ylab("")
MP_SZ_pro <-  MP_SZ_pro.boot %>% plot.my.irf(Partial = 3, Epsname = c("d", "s", "mp"), Normalize = IV.RR_pro$B[3]/0.25) + xlab("") + ylab("")
pros <- grid.arrange(CV.MP, SW.MP, MP_RR_pro, MP_SZ_pro, ncol = 4)
pros <- grid.arrange(CV.MP, SW.MP, MP_RR_pro, MP_SZ_pro, ncol = 4)
# IRFs
MP_RR_pro <-  MP_RR_pro.boot %>% plot.my.irf(Partial = 3, Epsname = c("d", "s", "mp"), Normalize = IV.RR_pro$B[3]/0.25) + xlab("") + ylab("")
MP_SZ_pro <-  MP_SZ_pro.boot %>% plot.my.irf(Partial = 3, Epsname = c("d", "s", "mp"), Normalize = IV.RR_pro$B[3]/0.25) + xlab("") + ylab("")
pros <- grid.arrange(CV.MP, SW.MP, MP_RR_pro, MP_SZ_pro, ncol = 4)
pros <- grid.arrange(SW.MP, MP_RR_pro, MP_SZ_pro, ncol = 3)
# IV results
tab_iv_id <- cbind(IV_id.tab(IV.SW, IV.SW.boot),
IV_id.tab(IV.RR, IV.RR.boot),
IV_id.tab(IV.SZ, IV.SZ.boot),
IV_id.tab(IV.RR_pro, MP_RR_pro.boot),
IV_id.tab(IV.SZ_pro, MP_SZ_pro.boot))
rownames(tab_iv_id) <- NULL
kableExtra::kable(tab_iv_id, format = "latex", booktabs = T, digits = 3, linesep = "")
MP_SZ_pro
# FAVAR -------------------------------------------------------------------
r <- 3
SDFM <- FALSE
source("Fa.R")
colnames(USA_FAVAR) <- c(colnames(USA_Tri), 1:r)
favar4 <- VAR(USA_FAVAR, p = 4, type = "const")
FaIV.SW      <- get.id.iv(favar4, instruments = SW, Synchro = T)
FaIV.RR       <- get.id.iv(favar4, instruments = RR, Synchro = T)
FaIV.SZ       <- get.id.iv(favar4, instruments = SZ, Synchro = T)
mp_iv_fa     <- left_join(FaIV.SW$eps.ts, FaIV.SZ$eps.ts, by = "time")
mp_iv_fa     <- left_join(mp_iv_fa, FaIV.RR$eps.ts, by = "time") %>% tidyr::drop_na()
colnames(mp_iv_fa) <- c("time", "SW", "SZ", "RR")
# FAVAR -------------------------------------------------------------------
r <- 3
SDFM <- FALSE
source("Fa.R")
colnames(USA_FAVAR) <- c(colnames(USA_Tri), 1:r)
favar4 <- VAR(USA_FAVAR, p = 4, type = "const")
FaIV.SW      <- get.id.iv(favar4, instruments = SW, Synchro = T)
FaIV.RR       <- get.id.iv(favar4, instruments = RR, Synchro = T)
FaIV.SZ       <- get.id.iv(favar4, instruments = SZ, Synchro = T)
mp_iv_fa     <- left_join(FaIV.SW$eps.ts, FaIV.SZ$eps.ts, by = "time")
mp_iv_fa     <- left_join(mp_iv_fa, FaIV.RR$eps.ts, by = "time") %>% tidyr::drop_na()
colnames(mp_iv_fa) <- c("time", "SW", "SZ", "RR")
mp_iv_fa_tab <-  mp_iv_fa %>% filter(time == 1974.25 | time == 1979.75 | time == 1988.75 | time == 1994 | time == 1990.75 | time == 1998.75 | time == 2001.25| time == 2002.75)
mp_iv_fa_tab[c(4,5),] <- mp_iv_fa_tab[c(5,4),]
mp_iv_fa_tab %>% t() %>% kableExtra::kable(format = "latex", booktabs = T, digits = 3, linesep = "")
# Inference
set.seed(1234)
MP_fa.SW  <- get.MBB.fixed(FaIV.SW, design = "fixed", Step = 15, nboot = 2000, Ci = 0.68) %>% plot.my.irf(Partial = 3, Epsname = c("d", "s", "mp", "X1", "X2", "X3"), Normalize = FaIV.SW$B[3]/0.25) + xlab("") + ylab("")
MP_fa.SW1 <- MP_fa.SW$data %>% filter(!stringr::str_detect(variable, "X")) %>% ggplot( aes(x = h, y = value)) + geom_line() + geom_hline(yintercept = 0, color = 'red') +
facet_wrap(~variable, scales = "free_y", labeller = label_parsed, ncol = 1) +
geom_ribbon(aes(ymin = L, ymax = U), alpha=0.3) +
xlab("Horizon") + ylab("Response") +
theme_bw()
MP_fa.SW2 <- MP_fa.SW$data %>% filter(!stringr::str_detect(variable, "X")) %>% ggplot( aes(x = h, y = value)) + geom_line() + geom_hline(yintercept = 0, color = 'red') +
facet_wrap(~variable, scales = "free_y", labeller = label_parsed, ncol = 1) +
geom_ribbon(aes(ymin = L, ymax = U), alpha=0.3) +
xlab("Horizon") + ylab("Response") +
theme_bw()
MP_fa.SW3 <- MP_fa.SW$data %>% filter(!stringr::str_detect(variable, "X")) %>% ggplot( aes(x = h, y = value)) + geom_line() + geom_hline(yintercept = 0, color = 'red') +
facet_wrap(~variable, scales = "free_y", labeller = label_parsed, ncol = 1) +
geom_ribbon(aes(ymin = L, ymax = U), alpha=0.3) +
xlab(" ") + ylab(" ") +
theme_bw() +
ggsave("../Plots/MP_fa_SW3.pdf", plot = MP_fa.SW3, width = 12, height = 3)
MP_fa_SW <- grid.arrange(MP_fa.SW1, MP_fa.SW2, MP_fa.SW3, ncol = 3)
MP_fa.SW3 <- MP_fa.SW$data %>% filter(!stringr::str_detect(variable, "X")) %>% ggplot( aes(x = h, y = value)) + geom_line() + geom_hline(yintercept = 0, color = 'red') +
facet_wrap(~variable, scales = "free_y", labeller = label_parsed, ncol = 1) +
geom_ribbon(aes(ymin = L, ymax = U), alpha=0.3) +
xlab(" ") + ylab(" ") +
theme_bw() +
ggsave("../Plots/MP_fa_SW3.pdf", plot = MP_fa.SW3, width = 12, height = 3)
MP_fa.SW1
Epsname = c("d", "s", "mp")
# pi ----------------------------------------------------------------------
hd_pi_SR <- hd.mod(SR, series = 2, Partial = NULL, Epsname)
hd_pi_SR_mp <- hd.mod(SR, series = 2, Partial = 3, Epsname)
hd_pi_CV <- hd.mod(CV, series = 2, Partial = NULL, Epsname)
hd_pi_CV_mp <- hd.mod(CV, series = 2, Partial = 3, Epsname)
hd_pi_dCov <- hd.mod(dCov, series = 2, Partial = NULL, Epsname)
hd_pi_dCov_mp <- hd.mod(dCov, series = 2, Partial = 3, Epsname)
hd_pi_SW_mp <- hd.mod(IV.SW, series = 2, Partial = 3, Epsname)
hd_pi_RR_mp <- hd.mod(IV.RR, series = 2, Partial = 3, Epsname)
hd_pi_SZ_mp <- hd.mod(IV.SZ, series = 2, Partial = 3, Epsname)
hd_pi_SR %>% plot.hd.mod()
hd_pi_CV %>% plot.hd.mod()
hd_pi_dCov %>% plot.hd.mod()
hd_pi_SW_mp %>% plot.hd.mod()
hd_pi_RR_mp %>% plot.hd.mod()
hd_pi_SZ_mp %>% plot.hd.mod()
## combined plot
hd_pi_mp <- hd_pi_SR_mp %>% left_join(hd_pi_dCov_mp, by = "t") %>%
left_join(hd_pi_CV_mp, by = "t") %>% left_join(hd_pi_SW_mp, by = "t") %>%
left_join(hd_pi_SZ_mp, by = "t") %>% left_join(hd_pi_RR_mp, by = "t") %>% tidyr::drop_na()
hd_pi_mp %<>% dplyr::filter(t >= 1973 & t <= 1983)
colnames(hd_pi_mp)[-1] <- c("SR", "dCov", "CV", "SW", "SZ", "RR")
recessions_start <- c( 1973.75, 1980,1981.5)
recessions_end <- c( 1975, 1980.5,1982.75)
hd_pi_mp_plot <- hd_pi_mp %>% reshape2::melt(id = "t") %>% ggplot(aes(x = t, y = value)) +
geom_line() + facet_wrap(~variable, ncol = 3) + xlab("") + ylab("") +
theme_bw() + geom_hline(yintercept = 0, color = "red", alpha = 0.5) +
scale_x_continuous(breaks = seq(hd_pi_mp$t[1] %>% ceiling(),hd_pi_mp$t[nrow(hd_pi_mp)], by = 2)) +
annotate("rect", xmin = recessions_start, xmax = recessions_end, ymin = -Inf, ymax = Inf, alpha = 0.3)
hd_pi_mp_plot
MP_shocks_plotSW_Fa <- ggplot(MP_shocks_plotSW_Fa_df_long, aes(x = time, y = value, group = variable)) +
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(breaks = seq(mp_all_stand$time[1] %>% ceiling(),mp_all_stand$time[nrow(mp_all_stand)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
annotate("rect", xmin = Start, xmax = End2, ymin = -Inf, ymax = Inf, alpha = 0.3) +
theme(legend.title = element_blank()) + ylim(-4.5, 4.5)
MP_shocks_plotSW_Fa_df <- IV.SW$eps.ts %>% left_join(FaIV.SW$eps.ts, by = "time") %>% filter(time >= mp_all_stand$time[1] & time <= mp_all_stand$time[nrow(mp_all_stand)])
MP_shocks_plotSW_Fa_df <- IV.SW$eps.ts %>% left_join(FaIV.SW$eps.ts, by = "time") %>% filter(time >= mp_all_stand$time[1] & time <= mp_all_stand$time[nrow(mp_all_stand)])
MP_shocks_plotSW_Fa_df[,-1] <- scale(MP_shocks_plotSW_Fa_df[,-1], center = F)
colnames(MP_shocks_plotSW_Fa_df)[-1] <- c("VAR", "FAVAR")
MP_shocks_plotSW_Fa_df_long <-  reshape2::melt(MP_shocks_plotSW_Fa_df, id.var = "time")
MP_shocks_plotSW_Fa <- ggplot(MP_shocks_plotSW_Fa_df_long, aes(x = time, y = value, group = variable)) +
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(breaks = seq(mp_all_stand$time[1] %>% ceiling(),mp_all_stand$time[nrow(mp_all_stand)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
annotate("rect", xmin = Start, xmax = End2, ymin = -Inf, ymax = Inf, alpha = 0.3) +
theme(legend.title = element_blank()) + ylim(-4.5, 4.5)
new_shock_plots <- grid.arrange(MP_shock_plot3, MP_shocks_plotSW_Fa, ncol = 1)
library(ggplot2)
mp_all_plot3$variable <- factor(  mp_all_plot3$variable, levels = c(   "CV",   "dCov", "SW",   "SZ",   "RR","SR" ))
MP_shock_plot3 <- ggplot(mp_all_plot3, aes(x = time, y = value, group = variable)) +
geom_line(aes(linetype = variable, color = variable), size = 0.7) +
scale_x_continuous(breaks = seq(mp_all_stand$time[1] %>% ceiling(),mp_all_stand$time[nrow(mp_all_stand)], 2)) +
xlab("") + ylab(" ")  + theme_bw() + theme(legend.title = element_blank()) +
geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) + scale_color_ochre(palette="lorikeet")+
annotate("rect", xmin = Start, xmax = End2, ymin = -Inf, ymax = Inf, alpha = 0.3) + ylim(-4.5, 4.5)
MP_shock_plot3
MP_shocks_plotSW_Fa_df <- IV.SW$eps.ts %>% left_join(FaIV.SW$eps.ts, by = "time") %>% filter(time >= mp_all_stand$time[1] & time <= mp_all_stand$time[nrow(mp_all_stand)])
MP_shocks_plotSW_Fa_df[,-1] <- scale(MP_shocks_plotSW_Fa_df[,-1], center = F)
colnames(MP_shocks_plotSW_Fa_df)[-1] <- c("VAR", "FAVAR")
MP_shocks_plotSW_Fa_df_long <-  reshape2::melt(MP_shocks_plotSW_Fa_df, id.var = "time")
MP_shocks_plotSW_Fa <- ggplot(MP_shocks_plotSW_Fa_df_long, aes(x = time, y = value, group = variable)) +
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(breaks = seq(mp_all_stand$time[1] %>% ceiling(),mp_all_stand$time[nrow(mp_all_stand)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
annotate("rect", xmin = Start, xmax = End2, ymin = -Inf, ymax = Inf, alpha = 0.3) +
theme(legend.title = element_blank()) + ylim(-4.5, 4.5)
new_shock_plots <- grid.arrange(MP_shock_plot3, MP_shocks_plotSW_Fa, ncol = 1)
library(ggplot2)
mp_all_plot3$variable <- factor(  mp_all_plot3$variable, levels = c(   "CV",   "dCov", "SW",   "SZ",   "RR","SR" ))
MP_shock_plot3 <- ggplot(mp_all_plot3, aes(x = time, y = value, group = variable)) +
geom_line(aes(linetype = variable, color = variable), size = 0.7) +
scale_x_continuous(breaks = seq(mp_all_stand$time[1] %>% ceiling(),mp_all_stand$time[nrow(mp_all_stand)], 2)) +
xlab("") + ylab(" ")  + theme_bw() + theme(legend.title = element_blank()) +
geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) + scale_color_ochre(palette="lorikeet") + ylim(-4.5, 4.5)
MP_shock_plot3
MP_shocks_plotSW_Fa_df <- IV.SW$eps.ts %>% left_join(FaIV.SW$eps.ts, by = "time") %>% filter(time >= mp_all_stand$time[1] & time <= mp_all_stand$time[nrow(mp_all_stand)])
MP_shocks_plotSW_Fa_df[,-1] <- scale(MP_shocks_plotSW_Fa_df[,-1], center = F)
colnames(MP_shocks_plotSW_Fa_df)[-1] <- c("VAR", "FAVAR")
MP_shocks_plotSW_Fa_df_long <-  reshape2::melt(MP_shocks_plotSW_Fa_df, id.var = "time")
MP_shocks_plotSW_Fa <- ggplot(MP_shocks_plotSW_Fa_df_long, aes(x = time, y = value, group = variable)) +
geom_line(aes(linetype = variable)) + scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(breaks = seq(mp_all_stand$time[1] %>% ceiling(),mp_all_stand$time[nrow(mp_all_stand)], 2)) +
xlab("") + ylab(" ")  + theme_bw()  + geom_hline(yintercept = c(-1, 1), linetype = "dashed", alpha = 0.3) +
theme(legend.title = element_blank()) + ylim(-4.5, 4.5)
new_shock_plots <- grid.arrange(MP_shock_plot3, MP_shocks_plotSW_Fa, ncol = 1)
